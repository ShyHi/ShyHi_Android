package dev.rug.shyhi;

import android.app.IntentService;
import android.content.Intent;
import android.os.Binder;
import android.os.IBinder;
import android.util.Log;

public class ConvoUpdateService extends IntentService {

	public ConvoUpdateService(String name) {
		super(name);
	}
	public ConvoUpdateService() {
		super("ConvoUpdateService");
	}
	/**
	   * The IntentService calls this method from the default worker thread with
	   * the intent that started the service. When this method returns, IntentService
	   * stops the service, as appropriate.
	   */
	  @Override
	  protected void onHandleIntent(Intent intent) {              
	           RestUtils.getUpdates(Installation.getUUID());
	           Log.i("Succeed","Yes");        
	          }
	    // Binder given to clients
	    private final IBinder mBinder = new LocalBinder();
	    /**
	     * Class used for the client Binder.  Because we know this service always
	     * runs in the same process as its clients, we don't need to deal with IPC.
	     */
	    public class LocalBinder extends Binder {
	        ConvoUpdateService getService() {
	            // Return this instance of LocalService so clients can call public methods
	            return ConvoUpdateService.this;
	        }
	    }

	    @Override
	    public IBinder onBind(Intent intent) {
	        return mBinder;
	    }

	    /** method for clients */
	    public Convo updateConvo(String convoID) {
	    	RestUtils.getCurrentConvoUpdates(convoID);
	    	
	    }
	  
	
}
